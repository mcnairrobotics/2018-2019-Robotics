package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.Gyroscope;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.hardware.DistanceSensor;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.Gamepad;


@TeleOp

public class TestRobotTeleOp extends LinearOpMode{
    private DcMotor m1;
    private DcMotor m2;
    private DcMotor arm1;
    private Servo release;
    private Servo rightArm;
    private Servo leftArm;
    
     @Override
    public void runOpMode() {
        

    m1 = hardwareMap.get(DcMotor.class, "M1");
    m2 = hardwareMap.get(DcMotor.class,"M2");
    arm1 = hardwareMap.get(DcMotor.class,"Arm1");
    leftArm = hardwareMap.get(Servo.class,"leftArm");
    rightArm = hardwareMap.get(Servo.class,"rightArm");
    float leftMotorPower = 0;
    double leftArmPos = 0;
    double rightArmPos = 0;
    
    telemetry.addData("Status", "Initialized");
    telemetry.update();

    m1.setDirection(DcMotorSimple.Direction.REVERSE);
    
    waitForStart();
    
    while (opModeIsActive()) {
        telemetry.addData("Status", "running");
        telemetry.update();
        //telemetry.addData("left_stick_y",-leftMotorPower);
        telemetry.addData("right_stick_y",gamepad1.right_stick_y);
        
        //gamepad1.dpad_up
        telemetry.addData("Dpad Up", gamepad1.dpad_up);
        leftMotorPower=0;
        if (gamepad1.dpad_up){
            leftMotorPower = 1;
        }
         if (gamepad1.dpad_down){
            leftMotorPower = -1;
        }
        telemetry.addData("left_stick_y",-leftMotorPower);
        
        m1.setPower(leftMotorPower);
        m2.setPower(-gamepad1.right_stick_y);
        arm1.setPower(0);
        //m1.setPower(0.5);
        //m2.setPower(0.5);
        

        
        if (gamepad1.left_trigger > 0){
         leftArmPos = leftArmPos + .1;
         rightArmPos = rightArmPos + 0.1;
        }
        if (gamepad1.right_trigger > 0){
         leftArmPos = leftArmPos - .1;
         rightArmPos = rightArmPos - .1;
        }
        
        telemetry.addData("left_trigger",gamepad1.left_trigger);
        telemetry.addData("right_trigger",gamepad1.right_trigger);

        leftArm.setPosition(leftArmPos);
        rightArm.setPosition(rightArmPos);
        //leftArm.setPosition(rightArmPos);
        
    
    }
    
    }
    
}